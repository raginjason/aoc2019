name: Go
on: [push]
jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Run GolangCI-Lint
      uses: actions-contrib/golangci-lint@master
      with:
        args: run

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: Check Module Cache
      id: cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.cache-name }}-
          ${{ runner.os }}-go-
          ${{ runner.os }}-

    - name: Download Modules
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        go mod download
        go mod verify

    - name: Test
      run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: Check Module Cache
      id: cache
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.cache-name }}-
          ${{ runner.os }}-go-
          ${{ runner.os }}-

    - name: Download Modules
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        go mod download
        go mod verify

    - name: Build
      run: CGO_ENABLED=0 GOOS=linux go build -v .
